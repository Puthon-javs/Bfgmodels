from aiogram import types, Dispatcher from user import BFGuser from assets.antispam import antispam, new_earning import random

active_players = set() players = {} squads = {}

@antispam async def biowar_handler(message: types.Message, user: BFGuser): uid = user.user_id text = message.text.lower().strip()

if text == "/bio_on":
    active_players.add(uid)
    await message.answer("üß¨ –ú–æ–¥—É–ª—å –ë–∏–æ–≤–æ–π–Ω–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ /–ø–æ–º–æ—â—å")
    return

if text == "/bio_off":
    active_players.discard(uid)
    await message.answer("üö™ –í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –º–æ–¥—É–ª—å –ë–∏–æ–≤–æ–π–Ω–∞.")
    return

if text == "/–ø–æ–º–æ—â—å":
    await message.answer(
        "üìú –ö–æ–º–∞–Ω–¥—ã –ë–∏–æ–≤–æ–π–Ω—ã:\n"
        "–≤—Å–∫—Ä—ã—Ç—å, –ø–æ–∏—Å–∫, —Å–∏–Ω—Ç–µ–∑, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å [–ø—Ä–µ–¥–º–µ—Ç]\n"
        "–º–∞–≥–∞–∑–∏–Ω, —Ç–æ—Ä–≥–æ–≤–µ—Ü, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, —Å–æ—é–∑, —Ä–µ–π–¥, PvP: –≤—ã–∑–æ–≤ @–Ω–∏–∫ / –ø—Ä–∏–Ω—è—Ç—å / —É–¥–∞—Ä / –∑–∞—â–∏—Ç–∞"
    )
    return

if uid not in active_players:
    return

if uid not in players:
    players[uid] = {
        "hp": 100, "infection": 0, "energy": 5, "components": 0,
        "inventory": ["–∞–ø—Ç–µ—á–∫–∞", "–ø—Ä–æ—Ç–∏–≤–æ—è–¥–∏–µ"],
        "resources": 5, "base": 0, "vehicle": None, "squad": None
    }

p = players[uid]
reply = ""

if text == "–≤—Å–∫—Ä—ã—Ç—å":
    p["components"] += 1
    reply = "üß™ –í—ã –≤—Å–∫—Ä—ã–ª–∏ –∑–æ–Ω—É –∏ –Ω–∞—à–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç."

elif text == "–ø–æ–∏—Å–∫":
    found = random.choice(["üî© –º–µ—Ç–∞–ª–ª", "üß¨ –±–∏–æ–º–∞—Ç–µ—Ä–∏–∞–ª", "‚öóÔ∏è —Ä–µ–∞–≥–µ–Ω—Ç—ã"])
    p["inventory"].append(found)
    reply = f"üîç –ù–∞–π–¥–µ–Ω —Ä–µ—Å—É—Ä—Å: {found}"

elif text.startswith("–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å"):
    item = text.replace("–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å", "").strip()
    if item in p["inventory"]:
        p["inventory"].remove(item)
        reply = f"‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {item}"
    else:
        reply = f"‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–∞: {item}"

elif text == "—Å–∏–Ω—Ç–µ–∑":
    if p["components"] >= 3:
        p["inventory"].append("–≤–∞–∫—Ü–∏–Ω–∞")
        p["components"] -= 3
        reply = "üíâ –í—ã —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–ª–∏ –≤–∞–∫—Ü–∏–Ω—É."
    else:
        reply = "‚ùå –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 3 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞."

elif text.startswith("—Å–æ–∑–¥–∞—Ç—å —Å–æ—é–∑"):
    name = text.replace("—Å–æ–∑–¥–∞—Ç—å —Å–æ—é–∑", "").strip()
    squads[name] = [uid]
    p["squad"] = name
    reply = f"üõ°Ô∏è –°–æ—é–∑ '{name}' —Å–æ–∑–¥–∞–Ω."

elif text.startswith("–≤—Å—Ç—É–ø–∏—Ç—å —Å–æ—é–∑"):
    name = text.replace("–≤—Å—Ç—É–ø–∏—Ç—å —Å–æ—é–∑", "").strip()
    if name in squads:
        squads[name].append(uid)
        p["squad"] = name
        reply = f"ü§ù –í—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —Å–æ—é–∑ '{name}'"
    else:
        reply = "‚ùå –°–æ—é–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω."

elif text == "—Å–æ—é–∑":
    reply = f"üõ°Ô∏è –í–∞—à —Å–æ—é–∑: {p['squad'] or '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}"

elif text == "—Ä–µ–π–¥":
    if p["squad"]:
        loot = random.randint(3, 8)
        p["resources"] += loot
        reply = f"‚öîÔ∏è –†–µ–π–¥ —É—Å–ø–µ—à–µ–Ω! –ü–æ–ª—É—á–µ–Ω–æ {loot} —Ä–µ—Å—É—Ä—Å–æ–≤."
    else:
        reply = "‚ùå –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —Å–æ—é–∑–µ."

else:
    reply = "ü§ñ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–ø–∏—à–∏—Ç–µ /–ø–æ–º–æ—â—å"

await message.answer(reply)
await new_earning(message)

def register_handlers(dp: Dispatcher): dp.register_message_handler( biowar_handler, lambda m: m.text and m.chat.type in ["private", "supergroup"] )

MODULE_DESCRIPTION = { "name": "üß¨ –ë–∏–æ–≤–æ–π–Ω–∞", "description": "–ú–æ–¥—É–ª—å: PvP, —Å–æ—é–∑, —Ä–µ–π–¥—ã, —Ç–æ—Ä–≥–æ–≤—Ü—ã, –∑–∞—Ä–∞–∂–µ–Ω–∏–µ –∏ —Å–∏–Ω—Ç–µ–∑. –°—Ç–∏–ª—å Iris." }

