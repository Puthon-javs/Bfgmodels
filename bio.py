from aiogram import types, Dispatcher import random

–£–∫–∞–∂–∏ —Å–≤–æ–π ID –∑–¥–µ—Å—å

OWNER_ID = 8174117949

war_users = {}

SHOP = { "–≤–æ–µ–Ω–Ω—ã–π –∑–∞–≤–æ–¥": 4_000_000, "MG42": 500_000, "—Ç–∞–Ω–∫ –¢-90": 1_200_000, "–≤–µ—Ä—Ç–æ–ª—ë—Ç": 1_500_000, "–±—É–Ω–∫–µ—Ä": 1_000_000 }

RANKS = [ (2_000_000, "üëë –ì–µ–Ω–µ—Ä–∞–ª"), (500_000, "üõ° –ö–æ–º–∞–Ω–¥–∏—Ä"), (100_000, "ü™ñ –ë–æ–µ—Ü"), (0, "üî∞ –ù–æ–≤–æ–±—Ä–∞–Ω–µ—Ü") ]

async def warbase_handler(message: types.Message): uid = message.from_user.id text = message.text.lower().strip()

if uid not in war_users:
    war_users[uid] = {"balance": 10_000, "items": []}

p = war_users[uid]
reply = ""

if text == "–≤–æ–µ–Ω–Ω–∞—è –±–∞–∑–∞":
    reply = "üè∞ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–æ–µ–Ω–Ω—É—é –±–∞–∑—É:\n"
    for item, price in SHOP.items():
        reply += f"üîπ {item} ‚Äî {price} —ç–∫—Ç–æ–ø–ª–∞–∑–º—ã\n"
    reply += "\n–î–ª—è –ø–æ–∫—É–ø–∫–∏: –∫—É–ø–∏—Ç—å [–Ω–∞–∑–≤–∞–Ω–∏–µ]"

elif text.startswith("–∫—É–ø–∏—Ç—å"):
    item = text.replace("–∫—É–ø–∏—Ç—å", "").strip()
    if item in SHOP:
        cost = SHOP[item]
        if p["balance"] >= cost:
            p["balance"] -= cost
            p["items"].append(item)
            reply = f"‚úÖ –ö—É–ø–ª–µ–Ω–æ: {item}. –û—Å—Ç–∞—Ç–æ–∫: {p['balance']}"
        else:
            reply = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤."
    else:
        reply = "‚ùå –ù–µ—Ç —Ç–∞–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞."

elif text == "–º–æ–π –∞—Ä—Å–µ–Ω–∞–ª":
    items = p["items"] or ["‚Äî –ø—É—Å—Ç–æ ‚Äî"]
    reply = "üéí –ê—Ä—Å–µ–Ω–∞–ª:\n" + "\n".join(f"‚Ä¢ {i}" for i in items)
    reply += f"\nüí∞ –ë–∞–ª–∞–Ω—Å: {p['balance']} —ç–∫—Ç–æ–ø–ª–∞–∑–º—ã"

elif text == "–º–æ–π —Ä–∞–Ω–≥":
    bal = p["balance"]
    for required, rank in RANKS:
        if bal >= required:
            reply = f"üéñ –í–∞—à —Ä–∞–Ω–≥: {rank}\nüí∞ –≠–∫—Ç–æ–ø–ª–∞–∑–º–∞: {bal}"
            break

elif text.startswith("–±–¥–∞—Ç—å"):
    if uid != OWNER_ID:
        reply = "‚õî –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å –¥–æ–Ω–∞—Ç."
    elif not message.reply_to_message:
        reply = "üì© –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞. –ü—Ä–∏–º–µ—Ä: –±–¥–∞—Ç—å 10000"
    else:
        parts = text.split()
        if len(parts) < 2 or not parts[1].isdigit():
            reply = "‚ùå –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É: –±–¥–∞—Ç—å 10000"
        else:
            amount = int(parts[1])
            target_id = message.reply_to_message.from_user.id
            if war_users[uid]["balance"] < amount:
                reply = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ —É –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è."
            else:
                war_users[uid]["balance"] -= amount
                if target_id not in war_users:
                    war_users[target_id] = {"balance": 0, "items": []}
                war_users[target_id]["balance"] += amount
                reply = f"‚úÖ –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ {amount} —ç–∫—Ç–æ–ø–ª–∞–∑–º—ã. –û—Å—Ç–∞—Ç–æ–∫: {war_users[uid]['balance']}"

else:
    reply = "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –î–æ—Å—Ç—É–ø–Ω–æ: –≤–æ–µ–Ω–Ω–∞—è –±–∞–∑–∞, –∫—É–ø–∏—Ç—å, –º–æ–π –∞—Ä—Å–µ–Ω–∞–ª, –º–æ–π —Ä–∞–Ω–≥, –±–¥–∞—Ç—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞)"

await message.answer(reply)

def register_handlers(dp: Dispatcher): dp.register_message_handler(warbase_handler, lambda m: m.text and m.chat.type in ["private", "supergroup"])

