from aiogram import types
from aiogram.dispatcher import Dispatcher
import random
import time

# üîê –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π Telegram user_id
ADMIN_ID = 8174117949

# üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
stats = {
    "–∫–æ–º–∞–Ω–¥—ã": 0,
    "—à—É—Ç–∫–∏": 0,
    "–∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã": 0,
    "–æ—Ç–≤–µ—Ç—ã_–±–æ—Ç—è—Ä–∞": 0,
    "–æ–±–∑—ã–≤–∞–ª–∫–∏": 0,
    "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏": set()
}

# üìò –ù–∞—Å—Ç–æ—è—â–∏–µ —Å—Ç–∞—Ç—å–∏ –£–ö –†–§
uk_articles = [
    {
        "number": 105,
        "title": "–£–±–∏–π—Å—Ç–≤–æ",
        "text": "–£–º—ã—à–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏—á–∏–Ω–µ–Ω–∏–µ —Å–º–µ—Ä—Ç–∏ –¥—Ä—É–≥–æ–º—É —á–µ–ª–æ–≤–µ–∫—É ‚Äî –Ω–∞–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏—à–µ–Ω–∏–µ–º —Å–≤–æ–±–æ–¥—ã –æ—Ç 6 –¥–æ 15 –ª–µ—Ç."
    },
    {
        "number": 158,
        "title": "–ö—Ä–∞–∂–∞",
        "text": "–¢–∞–π–Ω–æ–µ —Ö–∏—â–µ–Ω–∏–µ —á—É–∂–æ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞ ‚Äî –Ω–∞–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —à—Ç—Ä–∞—Ñ–æ–º –∏–ª–∏ –ª–∏—à–µ–Ω–∏–µ–º —Å–≤–æ–±–æ–¥—ã –¥–æ 2 –ª–µ—Ç."
    },
    {
        "number": 159,
        "title": "–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ",
        "text": "–•–∏—â–µ–Ω–∏–µ –∏–º—É—â–µ—Å—Ç–≤–∞ –ø—É—Ç—ë–º –æ–±–º–∞–Ω–∞ –∏–ª–∏ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –¥–æ–≤–µ—Ä–∏–µ–º."
    },
    {
        "number": 228,
        "title": "–ù–∞—Ä–∫–æ—Ç–∏–∫–∏",
        "text": "–ù–µ–∑–∞–∫–æ–Ω–Ω–æ–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Ä–∫–æ—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ä–µ–¥—Å—Ç–≤ ‚Äî –Ω–∞–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏—à–µ–Ω–∏–µ–º —Å–≤–æ–±–æ–¥—ã –¥–æ 10 –ª–µ—Ç."
    }
]

# ==================== –§–£–ù–ö–¶–ò–ò ====================

async def start(message: types.Message):
    stats["–∫–æ–º–∞–Ω–¥—ã"] += 1
    stats["–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"].add(message.from_user.id)
    await message.answer("–ø—Ä–∏–≤–µ—Ç")


async def botyara(message: types.Message):
    stats["–∫–æ–º–∞–Ω–¥—ã"] += 1
    stats["–æ—Ç–≤–µ—Ç—ã_–±–æ—Ç—è—Ä–∞"] += 1
    stats["–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"].add(message.from_user.id)

    responses = [
        "–Ø —Ç—É—Ç üòä", "–ù–∞ –º–µ—Å—Ç–µ üëç", "–†–∞–±–æ—Ç–∞–µ—Ç üíª", "–ß–µ–≥–æ –∑–≤–∞–ª? ü§ñ",
        "–ì–æ—Ç–æ–≤ –∫ –∫–æ–º–∞–Ω–¥–∞–º! üîß", "–°–ª—É—à–∞—é, –∫–æ–º–∞–Ω–¥–∏—Ä! ü´°", "–ë–æ—Ç—è—Ä–∞ –≤ –¥–µ–ª–µ üòé",
        "–ö–∞–∫ –≤—Å–µ–≥–¥–∞, —Ä—è–¥–æ–º üí¨", "–î–∞-–¥–∞, —è –≤–∞—Å –ø–æ–Ω—è–ª! üì°", "–ù–∞ —Å–≤—è–∑–∏! üì±"
    ]
    await message.reply(random.choice(responses))


async def who_am_i(message: types.Message):
    stats["–∫–æ–º–∞–Ω–¥—ã"] += 1
    stats["–∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã"] += 1
    stats["–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"].add(message.from_user.id)

    compliments = [
        "–¢—ã –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è! üíñ", "–¢—ã –∫–∞–∫ —Å–æ–ª–Ω—Ü–µ üåû", "–¢—ã –ø—Ä–æ—Å—Ç–æ –∫–æ—Å–º–æ—Å! üöÄ",
        "–¢–∞–∫–∏—Ö, –∫–∞–∫ —Ç—ã, –±–æ–ª—å—à–µ –Ω–µ—Ç üòç", "–¢—ã ‚Äî –∫—Ä–∞—Å–æ—Ç–∞ –∏ —É–º üí°üíã",
        "–¢–≤–æ—è —É–ª—ã–±–∫–∞ ‚Äî –º–∞–≥–∏—è ‚ú®", "–¢—ã –∫–∞–∫ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å ‚òÄÔ∏è",
        "–¢—ã —Å–ª–æ–≤–Ω–æ –ø–µ—Å–Ω—è üéµ", "–¢—ã –¥–æ—Å—Ç–æ–π–Ω–∞ –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ üå∑",
        "–¢—ã ‚Äî –∫–∞–∫ —Ä–µ–¥–∫–æ–µ —Å–æ–∫—Ä–æ–≤–∏—â–µ üíé"
    ]
    await message.reply(random.choice(compliments))


async def how_are_you(message: types.Message):
    stats["–∫–æ–º–∞–Ω–¥—ã"] += 1
    stats["–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"].add(message.from_user.id)

    replies = [
        "–û—Ç–ª–∏—á–Ω–æ! –ê —É —Ç–µ–±—è –∫–∞–∫? üòä", "–ñ–∏–≤—É, —Ä–∞–±–æ—Ç–∞—é ü§ñ",
        "–õ—É—á—à–µ –≤—Å–µ—Ö üôè", "–° —Ç–æ–±–æ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ª—É—á—à–µ üåü",
        "–ñ–¥—É –Ω–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥! üõ†Ô∏è"
    ]
    await message.reply(random.choice(replies))


async def joke(message: types.Message):
    stats["–∫–æ–º–∞–Ω–¥—ã"] += 1
    stats["—à—É—Ç–∫–∏"] += 1
    stats["–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"].add(message.from_user.id)

    jokes = [
        "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –Ω–µ –ª—é–±—è—Ç –ø—Ä–∏—Ä–æ–¥—É? –¢–∞–º –±–∞–≥–∏ üêõ",
        "‚Äî –ë–æ—Ç, —Ç—ã –∂–∏–≤–æ–π? ‚Äî –Ø –ø–æ—Ç–æ–∫ üòÅ",
        "–ö–∞–∫ –∑–æ–≤—É—Ç –ø–æ—é—â–µ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞? ‚Äî –ê–ª–≥–æ—Ä–∏—Ç–ú–∏—Ö–∞–∏–ª üé§",
        "–¢—ã –∫–∞–∫ –∫–∞–ø—á–∞ ‚Äî —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—à—å üò§",
        "–£–ø–∞–ª —Å–µ—Ä–≤–µ—Ä ‚Äî –≤—Å—Ç–∞–ª DevOps üòÖ"
    ]
    await message.reply(random.choice(jokes))


async def ping(message: types.Message):
    start = time.perf_counter()
    reply = await message.reply("‚è±Ô∏è –ò–∑–º–µ—Ä—è—é –ø–∏–Ω–≥...")
    end = time.perf_counter()

    ping_ms = round((end - start) * 1000, 2)
    await reply.edit_text(f"üì° –ü–∏–Ω–≥: <b>{ping_ms} –º—Å</b>", parse_mode="HTML")

    stats["–∫–æ–º–∞–Ω–¥—ã"] += 1
    stats["–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"].add(message.from_user.id)


async def sk_reply(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —á—å—ë-—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ! üôÉ")
        return

    stats["–∫–æ–º–∞–Ω–¥—ã"] += 1
    stats["–æ–±–∑—ã–≤–∞–ª–∫–∏"] += 1
    stats["–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"].add(message.from_user.id)

    insults = [
        "–¢—ã –∫–∞–∫ Wi-Fi –≤ –º–µ—Ç—Ä–æ ‚Äî –≤—Ä–æ–¥–µ –µ—Å—Ç—å, –Ω–æ —Ç–æ–ª–∫—É –Ω–æ–ª—å üì∂",
        "–ì–µ–Ω–∏–π... —Ç–æ–ª—å–∫–æ –Ω–∞–æ–±–æ—Ä–æ—Ç üòè",
        "–ï—Å–ª–∏ –±—ã –≥–ª—É–ø–æ—Å—Ç—å —Å–≤–µ—Ç–∏–ª–∞—Å—å ‚Äî —Ç—ã –±—ã–ª –±—ã –°–æ–ª–Ω—Ü–µ–º üåû",
        "–°–ª–æ–∂–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å... –∫–∞–∫ —Ä–µ–≥—É–ª—è—Ä–∫–∞ –Ω–∞ –ø–∏—Ç–æ–Ω–µ üòµ",
        "–¢–µ–±—è –±—ã –≤ –ª–æ–≥–∞—Ö –Ω–∞–π—Ç–∏ –∏ —É–¥–∞–ª–∏—Ç—å üßπ"
    ]

    await message.reply_to_message.reply(random.choice(insults))
    try:
        await message.delete()
    except:
        pass


async def show_stats(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        await message.reply("–£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ üîí")
        return

    total_users = len(stats["–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"])
    text = (
        f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>:\n"
        f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{total_users}</b>\n"
        f"üì• –ö–æ–º–∞–Ω–¥: <b>{stats['–∫–æ–º–∞–Ω–¥—ã']}</b>\n"
        f"üí¨ –ë–æ—Ç—è—Ä–∞: <b>{stats['–æ—Ç–≤–µ—Ç—ã_–±–æ—Ç—è—Ä–∞']}</b>\n"
        f"üíñ –ö–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã: <b>{stats['–∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã']}</b>\n"
        f"ü§£ –®—É—Ç–∫–∏: <b>{stats['—à—É—Ç–∫–∏']}</b>\n"
        f"üß® –û–±–∑—ã–≤–∞–ª–∫–∏: <b>{stats['–æ–±–∑—ã–≤–∞–ª–∫–∏']}</b>"
    )
    await message.reply(text, parse_mode="HTML")


async def show_status(message: types.Message):
    start = time.perf_counter()
    temp_msg = await message.reply("‚è≥ –°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ...")
    end = time.perf_counter()

    ping_ms = round((end - start) * 1000, 2)
    total_users = len(stats["–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"])

    text = (
        f"üìä <b>–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞</b>:\n"
        f"üì° –ü–∏–Ω–≥: <b>{ping_ms} –º—Å</b>\n"
        f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{total_users}</b>\n"
        f"üì• –ö–æ–º–∞–Ω–¥: <b>{stats['–∫–æ–º–∞–Ω–¥—ã']}</b>"
    )
    await temp_msg.edit_text(text, parse_mode="HTML")

    stats["–∫–æ–º–∞–Ω–¥—ã"] += 1
    stats["–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"].add(message.from_user.id)


async def my_article(message: types.Message):
    stats["–∫–æ–º–∞–Ω–¥—ã"] += 1
    stats["–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"].add(message.from_user.id)

    article = random.choice(uk_articles)
    article_text = (
        f"<b>–£–ö –†–§ ‚Äî –°—Ç–∞—Ç—å—è {article['number']}</b>\n"
        f"<b>{article['title']}</b>\n\n"
        f"{article['text']}"
    )
    await message.reply(article_text, parse_mode="HTML")


# ==================== –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –•–ï–ù–î–õ–ï–†–û–í ====================

def register_handlers(dp: Dispatcher):
    dp.register_message_handler(start, lambda m: m.text.lower().startswith('–ø—Ä–∏–≤–µ—Ç'))
    dp.register_message_handler(botyara, lambda m: m.text.lower().startswith('–±–æ—Ç—è—Ä–∞'))
    dp.register_message_handler(who_am_i, lambda m: m.text.lower().startswith('—è –∫—Ç–æ'))
    dp.register_message_handler(how_are_you, lambda m: m.text.lower().startswith('–∫–∞–∫ –¥–µ–ª–∞'))
    dp.register_message_handler(joke, lambda m: m.text.lower().startswith('—à—É—Ç–∫–∞'))
    dp.register_message_handler(sk_reply, lambda m: m.text.lower() == '—Å–∫')
    dp.register_message_handler(ping, lambda m: m.text.lower() in ['ping', '.ping', '!ping', '–ø–∏–Ω–≥', '.–ø–∏–Ω–≥', '!–ø–∏–Ω–≥'])
    dp.register_message_handler(show_stats, lambda m: m.text.lower() == '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    dp.register_message_handler(show_status, lambda m: m.text.lower() == '–ø–æ–∫–∞–∂–∏')
    dp.register_message_handler(my_article, lambda m: m.text.lower() == '–º–æ—è —Å—Ç–∞—Ç—å—è')
