from aiogram import types, Dispatcher
import wikipedia

wikipedia.set_lang("ru")

async def wiki_handler(message: types.Message):
    text = message.text.strip()
    if text.startswith("/–≤–∏–∫–∏–ø–µ–¥–∏—è") or text.lower().startswith("–≤–∏–∫–∏–ø–µ–¥–∏—è"):
        query = text.split(" ", 1)
        if len(query) < 2:
            await message.reply("‚ùå –£–∫–∞–∂–∏, —á—Ç–æ –∏—Å–∫–∞—Ç—å. –ü—Ä–∏–º–µ—Ä:\n<code>/–≤–∏–∫–∏–ø–µ–¥–∏—è Python</code>", parse_mode="HTML")
            return

        search_query = query[1]

        try:
            page = wikipedia.page(search_query)
            summary = wikipedia.summary(search_query, sentences=3)
            title = page.title

            response = f"üîç {title}\n```java\n{summary}\n```"
            await message.reply(response, parse_mode="HTML")

        except wikipedia.exceptions.DisambiguationError as e:
            options = "\n".join(e.options[:5])
            await message.reply(f"‚ö†Ô∏è –ó–∞–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º –æ–±—â–∏–π. –í–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∞—Ç—å–∏:\n<pre>{options}</pre>", parse_mode="HTML")

        except wikipedia.exceptions.PageError:
            await message.reply("‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ —ç—Ç–æ–º—É –∑–∞–ø—Ä–æ—Å—É.", parse_mode="HTML")

        except Exception as e:
            await message.reply(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: <code>{e}</code>", parse_mode="HTML")


def register_handlers(dp: Dispatcher):
    dp.register_message_handler(wiki_handler, lambda msg: msg.text.lower().startswith("–≤–∏–∫–∏–ø–µ–¥–∏—è"))
    dp.register_message_handler(wiki_handler, commands=['–≤–∏–∫–∏–ø–µ–¥–∏—è'])